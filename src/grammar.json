{
  "name": "kamailio",
  "rules": {
    "source_file": {
      "type": "SEQ",
      "members": [
        {
          "type": "SYMBOL",
          "name": "file_starter"
        },
        {
          "type": "REPEAT",
          "content": {
            "type": "SYMBOL",
            "name": "_top_level_statement"
          }
        }
      ]
    },
    "file_starter": {
      "type": "SEQ",
      "members": [
        {
          "type": "CHOICE",
          "members": [
            {
              "type": "TOKEN",
              "content": {
                "type": "STRING",
                "value": "#!"
              }
            },
            {
              "type": "TOKEN",
              "content": {
                "type": "STRING",
                "value": "!!"
              }
            }
          ]
        },
        {
          "type": "FIELD",
          "name": "cfg_type",
          "content": {
            "type": "CHOICE",
            "members": [
              {
                "type": "TOKEN",
                "content": {
                  "type": "STRING",
                  "value": "SER"
                }
              },
              {
                "type": "TOKEN",
                "content": {
                  "type": "STRING",
                  "value": "KAMAILIO"
                }
              },
              {
                "type": "TOKEN",
                "content": {
                  "type": "STRING",
                  "value": "OPENSER"
                }
              },
              {
                "type": "TOKEN",
                "content": {
                  "type": "STRING",
                  "value": "MAXCOMPAT"
                }
              },
              {
                "type": "TOKEN",
                "content": {
                  "type": "STRING",
                  "value": "ALL"
                }
              }
            ]
          }
        }
      ]
    },
    "_top_level_statement": {
      "type": "CHOICE",
      "members": [
        {
          "type": "SYMBOL",
          "name": "file_inclusion"
        },
        {
          "type": "SYMBOL",
          "name": "routing_block"
        },
        {
          "type": "SYMBOL",
          "name": "config_variable"
        },
        {
          "type": "SYMBOL",
          "name": "preprocessor_directive"
        },
        {
          "type": "SYMBOL",
          "name": "keyword"
        },
        {
          "type": "SYMBOL",
          "name": "loadmodule"
        },
        {
          "type": "SYMBOL",
          "name": "loadmodulex"
        },
        {
          "type": "SYMBOL",
          "name": "comment"
        },
        {
          "type": "SYMBOL",
          "name": "modparam"
        },
        {
          "type": "SYMBOL",
          "name": "modparamx"
        }
      ]
    },
    "_QUOTE": {
      "type": "STRING",
      "value": "\""
    },
    "_TICK": {
      "type": "STRING",
      "value": "'"
    },
    "_SLASH": {
      "type": "STRING",
      "value": "/"
    },
    "_SEMICOLON": {
      "type": "STRING",
      "value": ";"
    },
    "_RPAREN": {
      "type": "STRING",
      "value": ")"
    },
    "_LPAREN": {
      "type": "STRING",
      "value": "("
    },
    "_LBRACE": {
      "type": "STRING",
      "value": "{"
    },
    "_RBRACE": {
      "type": "STRING",
      "value": "}"
    },
    "_LBRACK": {
      "type": "STRING",
      "value": "["
    },
    "_RBRACK": {
      "type": "STRING",
      "value": "]"
    },
    "_COMMA": {
      "type": "STRING",
      "value": ","
    },
    "_COLON": {
      "type": "STRING",
      "value": ":"
    },
    "_STAR": {
      "type": "STRING",
      "value": "*"
    },
    "_DOT": {
      "type": "STRING",
      "value": "."
    },
    "_CR": {
      "type": "STRING",
      "value": "\n"
    },
    "_COM_LINE": {
      "type": "STRING",
      "value": "//"
    },
    "_COM_LINE_DEPR": {
      "type": "STRING",
      "value": "#"
    },
    "_COM_START": {
      "type": "STRING",
      "value": "/*"
    },
    "_COM_END": {
      "type": "STRING",
      "value": "*/"
    },
    "file_inclusion": {
      "type": "SEQ",
      "members": [
        {
          "type": "CHOICE",
          "members": [
            {
              "type": "TOKEN",
              "content": {
                "type": "STRING",
                "value": "include_file"
              }
            },
            {
              "type": "TOKEN",
              "content": {
                "type": "STRING",
                "value": "import_file"
              }
            }
          ]
        },
        {
          "type": "FIELD",
          "name": "file_name",
          "content": {
            "type": "SYMBOL",
            "name": "string"
          }
        }
      ]
    },
    "loadmodule": {
      "type": "SEQ",
      "members": [
        {
          "type": "TOKEN",
          "content": {
            "type": "STRING",
            "value": "loadmodule"
          }
        },
        {
          "type": "FIELD",
          "name": "module_name",
          "content": {
            "type": "SYMBOL",
            "name": "string"
          }
        }
      ]
    },
    "loadmodulex": {
      "type": "SEQ",
      "members": [
        {
          "type": "TOKEN",
          "content": {
            "type": "STRING",
            "value": "loadmodulex"
          }
        },
        {
          "type": "FIELD",
          "name": "module_name",
          "content": {
            "type": "SYMBOL",
            "name": "string"
          }
        }
      ]
    },
    "predefined_routes": {
      "type": "CHOICE",
      "members": [
        {
          "type": "STRING",
          "value": "request_route"
        },
        {
          "type": "STRING",
          "value": "reply_route"
        },
        {
          "type": "STRING",
          "value": "branch_route"
        },
        {
          "type": "STRING",
          "value": "failure_route"
        },
        {
          "type": "STRING",
          "value": "onreply_route"
        },
        {
          "type": "STRING",
          "value": "event_route"
        },
        {
          "type": "STRING",
          "value": "onsend_route"
        },
        {
          "type": "STRING",
          "value": "route"
        }
      ]
    },
    "_route_name": {
      "type": "CHOICE",
      "members": [
        {
          "type": "SYMBOL",
          "name": "string"
        },
        {
          "type": "SYMBOL",
          "name": "identifier"
        },
        {
          "type": "SYMBOL",
          "name": "number"
        }
      ]
    },
    "named_route": {
      "type": "SEQ",
      "members": [
        {
          "type": "FIELD",
          "name": "route",
          "content": {
            "type": "SYMBOL",
            "name": "predefined_routes"
          }
        },
        {
          "type": "SYMBOL",
          "name": "_LBRACK"
        },
        {
          "type": "FIELD",
          "name": "route_name",
          "content": {
            "type": "SYMBOL",
            "name": "_route_name"
          }
        },
        {
          "type": "SYMBOL",
          "name": "_RBRACK"
        },
        {
          "type": "SYMBOL",
          "name": "_block"
        }
      ]
    },
    "unnamed_route": {
      "type": "SEQ",
      "members": [
        {
          "type": "FIELD",
          "name": "route",
          "content": {
            "type": "SYMBOL",
            "name": "predefined_routes"
          }
        },
        {
          "type": "SYMBOL",
          "name": "_block"
        }
      ]
    },
    "routing_block": {
      "type": "CHOICE",
      "members": [
        {
          "type": "SYMBOL",
          "name": "unnamed_route"
        },
        {
          "type": "SYMBOL",
          "name": "named_route"
        }
      ]
    },
    "_multiline_comment": {
      "type": "SEQ",
      "members": [
        {
          "type": "STRING",
          "value": "/*"
        },
        {
          "type": "PATTERN",
          "value": "[^*]*\\*+([^/*][^*]*\\*+)*"
        },
        {
          "type": "STRING",
          "value": "/"
        }
      ]
    },
    "comment": {
      "type": "CHOICE",
      "members": [
        {
          "type": "SEQ",
          "members": [
            {
              "type": "SYMBOL",
              "name": "_COM_LINE"
            },
            {
              "type": "PATTERN",
              "value": "[^\\n]*"
            }
          ]
        },
        {
          "type": "SEQ",
          "members": [
            {
              "type": "SYMBOL",
              "name": "_COM_LINE_DEPR"
            },
            {
              "type": "PATTERN",
              "value": "[^\\n]*"
            }
          ]
        },
        {
          "type": "SYMBOL",
          "name": "_multiline_comment"
        }
      ]
    },
    "_statement": {
      "type": "CHOICE",
      "members": [
        {
          "type": "SYMBOL",
          "name": "comment"
        },
        {
          "type": "SEQ",
          "members": [
            {
              "type": "SYMBOL",
              "name": "function_call"
            },
            {
              "type": "SYMBOL",
              "name": "_SEMICOLON"
            }
          ]
        },
        {
          "type": "SEQ",
          "members": [
            {
              "type": "SYMBOL",
              "name": "variable"
            },
            {
              "type": "SYMBOL",
              "name": "_SEMICOLON"
            }
          ]
        },
        {
          "type": "SEQ",
          "members": [
            {
              "type": "SYMBOL",
              "name": "route_call"
            },
            {
              "type": "SYMBOL",
              "name": "_SEMICOLON"
            }
          ]
        },
        {
          "type": "SYMBOL",
          "name": "if_statement"
        },
        {
          "type": "SEQ",
          "members": [
            {
              "type": "SYMBOL",
              "name": "control"
            },
            {
              "type": "SYMBOL",
              "name": "_SEMICOLON"
            }
          ]
        }
      ]
    },
    "keyword": {
      "type": "CHOICE",
      "members": [
        {
          "type": "TOKEN",
          "content": {
            "type": "PREC",
            "value": 1,
            "content": {
              "type": "STRING",
              "value": "cfgengine"
            }
          }
        }
      ]
    },
    "debug": {
      "type": "PREC_LEFT",
      "value": 3,
      "content": {
        "type": "CHOICE",
        "members": [
          {
            "type": "FIELD",
            "name": "key",
            "content": {
              "type": "TOKEN",
              "content": {
                "type": "STRING",
                "value": "debug"
              }
            }
          },
          {
            "type": "STRING",
            "value": "="
          },
          {
            "type": "FIELD",
            "name": "value",
            "content": {
              "type": "SYMBOL",
              "name": "number"
            }
          }
        ]
      }
    },
    "assignment": {
      "type": "STRING",
      "value": "="
    },
    "_log_variable": {
      "type": "PREC_LEFT",
      "value": 2,
      "content": {
        "type": "CHOICE",
        "members": [
          {
            "type": "FIELD",
            "name": "var",
            "content": {
              "type": "CHOICE",
              "members": [
                {
                  "type": "TOKEN",
                  "content": {
                    "type": "STRING",
                    "value": "log_name"
                  }
                },
                {
                  "type": "TOKEN",
                  "content": {
                    "type": "STRING",
                    "value": "log_stderror"
                  }
                },
                {
                  "type": "TOKEN",
                  "content": {
                    "type": "STRING",
                    "value": "log_facility"
                  }
                },
                {
                  "type": "TOKEN",
                  "content": {
                    "type": "STRING",
                    "value": "log_color"
                  }
                },
                {
                  "type": "TOKEN",
                  "content": {
                    "type": "STRING",
                    "value": "log_prefix"
                  }
                },
                {
                  "type": "TOKEN",
                  "content": {
                    "type": "STRING",
                    "value": "log_prefix_mode"
                  }
                },
                {
                  "type": "TOKEN",
                  "content": {
                    "type": "STRING",
                    "value": "log_engine_type"
                  }
                },
                {
                  "type": "TOKEN",
                  "content": {
                    "type": "STRING",
                    "value": "log_engine_data"
                  }
                }
              ]
            }
          },
          {
            "type": "TOKEN",
            "content": {
              "type": "STRING",
              "value": "="
            }
          },
          {
            "type": "FIELD",
            "name": "value",
            "content": {
              "type": "SYMBOL",
              "name": "string"
            }
          }
        ]
      }
    },
    "config_key": {
      "type": "FIELD",
      "name": "key",
      "content": {
        "type": "CHOICE",
        "members": [
          {
            "type": "TOKEN",
            "content": {
              "type": "STRING",
              "value": "debug"
            }
          },
          {
            "type": "TOKEN",
            "content": {
              "type": "STRING",
              "value": "log_name"
            }
          },
          {
            "type": "TOKEN",
            "content": {
              "type": "STRING",
              "value": "log_stderror"
            }
          },
          {
            "type": "TOKEN",
            "content": {
              "type": "STRING",
              "value": "log_facility"
            }
          },
          {
            "type": "TOKEN",
            "content": {
              "type": "STRING",
              "value": "log_color"
            }
          },
          {
            "type": "TOKEN",
            "content": {
              "type": "STRING",
              "value": "log_prefix"
            }
          },
          {
            "type": "TOKEN",
            "content": {
              "type": "STRING",
              "value": "log_prefix_mode"
            }
          },
          {
            "type": "TOKEN",
            "content": {
              "type": "STRING",
              "value": "log_engine_type"
            }
          },
          {
            "type": "TOKEN",
            "content": {
              "type": "STRING",
              "value": "log_engine_data"
            }
          },
          {
            "type": "TOKEN",
            "content": {
              "type": "STRING",
              "value": "fork"
            }
          },
          {
            "type": "TOKEN",
            "content": {
              "type": "STRING",
              "value": "fork_delay"
            }
          },
          {
            "type": "TOKEN",
            "content": {
              "type": "STRING",
              "value": "modinit_delay"
            }
          },
          {
            "type": "TOKEN",
            "content": {
              "type": "STRING",
              "value": "xavp_via_params"
            }
          },
          {
            "type": "TOKEN",
            "content": {
              "type": "STRING",
              "value": "xavp_via_fields"
            }
          },
          {
            "type": "TOKEN",
            "content": {
              "type": "STRING",
              "value": "xavp_via_reply_params"
            }
          },
          {
            "type": "TOKEN",
            "content": {
              "type": "STRING",
              "value": "listen"
            }
          },
          {
            "type": "TOKEN",
            "content": {
              "type": "STRING",
              "value": "advertise|ADVERTISE"
            }
          },
          {
            "type": "TOKEN",
            "content": {
              "type": "STRING",
              "value": "virtual"
            }
          },
          {
            "type": "TOKEN",
            "content": {
              "type": "STRING",
              "value": "name|NAME"
            }
          },
          {
            "type": "TOKEN",
            "content": {
              "type": "STRING",
              "value": "alias"
            }
          },
          {
            "type": "TOKEN",
            "content": {
              "type": "STRING",
              "value": "domain"
            }
          },
          {
            "type": "TOKEN",
            "content": {
              "type": "STRING",
              "value": "auto_aliases"
            }
          },
          {
            "type": "TOKEN",
            "content": {
              "type": "STRING",
              "value": "auto_domains"
            }
          },
          {
            "type": "TOKEN",
            "content": {
              "type": "STRING",
              "value": "dns"
            }
          },
          {
            "type": "TOKEN",
            "content": {
              "type": "STRING",
              "value": "rev_dns|dns_rev_via"
            }
          },
          {
            "type": "TOKEN",
            "content": {
              "type": "STRING",
              "value": "dns_try_ipv6"
            }
          },
          {
            "type": "TOKEN",
            "content": {
              "type": "STRING",
              "value": "dns_try_naptr"
            }
          },
          {
            "type": "TOKEN",
            "content": {
              "type": "STRING",
              "value": "dns_srv_lb|dns_srv_loadbalancing"
            }
          },
          {
            "type": "TOKEN",
            "content": {
              "type": "STRING",
              "value": "dns_udp_pref|dns_udp_preference"
            }
          },
          {
            "type": "TOKEN",
            "content": {
              "type": "STRING",
              "value": "dns_tcp_pref|dns_tcp_preference"
            }
          },
          {
            "type": "TOKEN",
            "content": {
              "type": "STRING",
              "value": "dns_tls_pref|dns_tls_preference"
            }
          },
          {
            "type": "TOKEN",
            "content": {
              "type": "STRING",
              "value": "dns_sctp_pref|dns_sctp_preference"
            }
          },
          {
            "type": "TOKEN",
            "content": {
              "type": "STRING",
              "value": "dns_retr_time"
            }
          },
          {
            "type": "TOKEN",
            "content": {
              "type": "STRING",
              "value": "dns_slow_query_ms"
            }
          },
          {
            "type": "TOKEN",
            "content": {
              "type": "STRING",
              "value": "dns_retr_no"
            }
          },
          {
            "type": "TOKEN",
            "content": {
              "type": "STRING",
              "value": "dns_servers_no"
            }
          },
          {
            "type": "TOKEN",
            "content": {
              "type": "STRING",
              "value": "dns_use_search_list"
            }
          },
          {
            "type": "TOKEN",
            "content": {
              "type": "STRING",
              "value": "dns_search_full_match"
            }
          },
          {
            "type": "TOKEN",
            "content": {
              "type": "STRING",
              "value": "dns_naptr_ignore_rfc"
            }
          },
          {
            "type": "TOKEN",
            "content": {
              "type": "STRING",
              "value": "dns_cache_init"
            }
          },
          {
            "type": "TOKEN",
            "content": {
              "type": "STRING",
              "value": "use_dns_cache|dns_use_cache"
            }
          },
          {
            "type": "TOKEN",
            "content": {
              "type": "STRING",
              "value": "use_dns_failover|dns_use_failover"
            }
          },
          {
            "type": "TOKEN",
            "content": {
              "type": "STRING",
              "value": "dns_cache_flags"
            }
          },
          {
            "type": "TOKEN",
            "content": {
              "type": "STRING",
              "value": "dns_cache_negative_ttl"
            }
          },
          {
            "type": "TOKEN",
            "content": {
              "type": "STRING",
              "value": "dns_cache_min_ttl"
            }
          },
          {
            "type": "TOKEN",
            "content": {
              "type": "STRING",
              "value": "dns_cache_max_ttl"
            }
          },
          {
            "type": "TOKEN",
            "content": {
              "type": "STRING",
              "value": "dns_cache_mem"
            }
          },
          {
            "type": "TOKEN",
            "content": {
              "type": "STRING",
              "value": "dns_cache_gc_interval"
            }
          },
          {
            "type": "TOKEN",
            "content": {
              "type": "STRING",
              "value": "dns_cache_del_nonexp|dns_cache_delete_nonexpired"
            }
          },
          {
            "type": "TOKEN",
            "content": {
              "type": "STRING",
              "value": "dns_cache_rec_pref"
            }
          },
          {
            "type": "TOKEN",
            "content": {
              "type": "STRING",
              "value": "ipv6 auto bind */"
            }
          },
          {
            "type": "TOKEN",
            "content": {
              "type": "STRING",
              "value": "auto_bind_ipv6"
            }
          },
          {
            "type": "TOKEN",
            "content": {
              "type": "STRING",
              "value": "bind_ipv6_link_local"
            }
          },
          {
            "type": "TOKEN",
            "content": {
              "type": "STRING",
              "value": "ipv6_hex_style"
            }
          }
        ]
      }
    },
    "config_value": {
      "type": "CHOICE",
      "members": [
        {
          "type": "SYMBOL",
          "name": "string"
        },
        {
          "type": "SYMBOL",
          "name": "number"
        }
      ]
    },
    "config_variable": {
      "type": "SEQ",
      "members": [
        {
          "type": "FIELD",
          "name": "key",
          "content": {
            "type": "SYMBOL",
            "name": "config_key"
          }
        },
        {
          "type": "STRING",
          "value": "="
        },
        {
          "type": "FIELD",
          "name": "value",
          "content": {
            "type": "SYMBOL",
            "name": "config_value"
          }
        }
      ]
    },
    "action_keyword": {
      "type": "CHOICE",
      "members": [
        {
          "type": "TOKEN",
          "content": {
            "type": "STRING",
            "value": "if"
          }
        },
        {
          "type": "TOKEN",
          "content": {
            "type": "STRING",
            "value": "else"
          }
        }
      ]
    },
    "control": {
      "type": "CHOICE",
      "members": [
        {
          "type": "TOKEN",
          "content": {
            "type": "STRING",
            "value": "return"
          }
        },
        {
          "type": "TOKEN",
          "content": {
            "type": "STRING",
            "value": "exit"
          }
        },
        {
          "type": "TOKEN",
          "content": {
            "type": "STRING",
            "value": "break"
          }
        },
        {
          "type": "TOKEN",
          "content": {
            "type": "STRING",
            "value": "drop"
          }
        }
      ]
    },
    "if_statement": {
      "type": "PREC_RIGHT",
      "value": 0,
      "content": {
        "type": "SEQ",
        "members": [
          {
            "type": "TOKEN",
            "content": {
              "type": "STRING",
              "value": "if"
            }
          },
          {
            "type": "FIELD",
            "name": "condition",
            "content": {
              "type": "SYMBOL",
              "name": "parentized_expression"
            }
          },
          {
            "type": "FIELD",
            "name": "action",
            "content": {
              "type": "CHOICE",
              "members": [
                {
                  "type": "SYMBOL",
                  "name": "_block"
                },
                {
                  "type": "SYMBOL",
                  "name": "_statement"
                }
              ]
            }
          },
          {
            "type": "CHOICE",
            "members": [
              {
                "type": "SYMBOL",
                "name": "else_block"
              },
              {
                "type": "BLANK"
              }
            ]
          }
        ]
      }
    },
    "parentized_expression": {
      "type": "SEQ",
      "members": [
        {
          "type": "SYMBOL",
          "name": "_LPAREN"
        },
        {
          "type": "SYMBOL",
          "name": "_expression"
        },
        {
          "type": "SYMBOL",
          "name": "_RPAREN"
        }
      ]
    },
    "else_block": {
      "type": "SEQ",
      "members": [
        {
          "type": "TOKEN",
          "content": {
            "type": "STRING",
            "value": "else"
          }
        },
        {
          "type": "CHOICE",
          "members": [
            {
              "type": "SYMBOL",
              "name": "_block"
            },
            {
              "type": "SYMBOL",
              "name": "_statement"
            }
          ]
        }
      ]
    },
    "string": {
      "type": "CHOICE",
      "members": [
        {
          "type": "SEQ",
          "members": [
            {
              "type": "SYMBOL",
              "name": "_QUOTE"
            },
            {
              "type": "REPEAT",
              "content": {
                "type": "CHOICE",
                "members": [
                  {
                    "type": "SYMBOL",
                    "name": "escape_sequence"
                  },
                  {
                    "type": "PATTERN",
                    "value": "[^\\\\\"]+"
                  }
                ]
              }
            },
            {
              "type": "SYMBOL",
              "name": "_QUOTE"
            }
          ]
        },
        {
          "type": "SEQ",
          "members": [
            {
              "type": "STRING",
              "value": "'"
            },
            {
              "type": "REPEAT",
              "content": {
                "type": "CHOICE",
                "members": [
                  {
                    "type": "SYMBOL",
                    "name": "escape_sequence"
                  },
                  {
                    "type": "PATTERN",
                    "value": "[^\\\\']+"
                  }
                ]
              }
            },
            {
              "type": "STRING",
              "value": "'"
            }
          ]
        }
      ]
    },
    "escape_sequence": {
      "type": "IMMEDIATE_TOKEN",
      "content": {
        "type": "SEQ",
        "members": [
          {
            "type": "STRING",
            "value": "\\"
          },
          {
            "type": "PATTERN",
            "value": "."
          }
        ]
      }
    },
    "preprocessor_directive": {
      "type": "CHOICE",
      "members": [
        {
          "type": "SEQ",
          "members": [
            {
              "type": "STRING",
              "value": "#!"
            },
            {
              "type": "PATTERN",
              "value": "(define|ifdef|ifndef|ifexp|trydefine|trydef|redefine|redef|defenv|defenvs|trydefenv|trydefenvs|defexp|defexps)"
            },
            {
              "type": "CHOICE",
              "members": [
                {
                  "type": "PATTERN",
                  "value": "\\s*\\w*"
                },
                {
                  "type": "BLANK"
                }
              ]
            }
          ]
        },
        {
          "type": "SEQ",
          "members": [
            {
              "type": "STRING",
              "value": "#!"
            },
            {
              "type": "PATTERN",
              "value": "(else|endif)"
            }
          ]
        },
        {
          "type": "SEQ",
          "members": [
            {
              "type": "STRING",
              "value": "#!"
            },
            {
              "type": "PATTERN",
              "value": "(subst|substdef|substdefs)"
            },
            {
              "type": "CHOICE",
              "members": [
                {
                  "type": "SEQ",
                  "members": [
                    {
                      "type": "FIELD",
                      "name": "from",
                      "content": {
                        "type": "CHOICE",
                        "members": [
                          {
                            "type": "SYMBOL",
                            "name": "string"
                          },
                          {
                            "type": "SYMBOL",
                            "name": "identifier"
                          }
                        ]
                      }
                    },
                    {
                      "type": "FIELD",
                      "name": "to",
                      "content": {
                        "type": "CHOICE",
                        "members": [
                          {
                            "type": "SYMBOL",
                            "name": "string"
                          },
                          {
                            "type": "SYMBOL",
                            "name": "identifier"
                          }
                        ]
                      }
                    }
                  ]
                },
                {
                  "type": "BLANK"
                }
              ]
            }
          ]
        }
      ]
    },
    "number": {
      "type": "CHOICE",
      "members": [
        {
          "type": "SYMBOL",
          "name": "hex_number"
        },
        {
          "type": "SYMBOL",
          "name": "oct_number"
        },
        {
          "type": "SYMBOL",
          "name": "dec_number"
        },
        {
          "type": "SYMBOL",
          "name": "bin_number"
        }
      ]
    },
    "variable": {
      "type": "CHOICE",
      "members": [
        {
          "type": "SYMBOL",
          "name": "local_variable"
        },
        {
          "type": "SYMBOL",
          "name": "avp_variable"
        },
        {
          "type": "SYMBOL",
          "name": "xavp_variable"
        },
        {
          "type": "SYMBOL",
          "name": "pseudo_variable"
        }
      ]
    },
    "local_id": {
      "type": "SEQ",
      "members": [
        {
          "type": "STRING",
          "value": "$"
        },
        {
          "type": "STRING",
          "value": "var"
        },
        {
          "type": "STRING",
          "value": "("
        },
        {
          "type": "SYMBOL",
          "name": "identifier"
        },
        {
          "type": "STRING",
          "value": ")"
        }
      ]
    },
    "local_variable": {
      "type": "SEQ",
      "members": [
        {
          "type": "FIELD",
          "name": "local_var",
          "content": {
            "type": "SYMBOL",
            "name": "local_id"
          }
        },
        {
          "type": "SYMBOL",
          "name": "assignment"
        },
        {
          "type": "FIELD",
          "name": "value",
          "content": {
            "type": "CHOICE",
            "members": [
              {
                "type": "SYMBOL",
                "name": "string"
              },
              {
                "type": "SYMBOL",
                "name": "number"
              },
              {
                "type": "SYMBOL",
                "name": "boolean_constant"
              },
              {
                "type": "SYMBOL",
                "name": "identifier"
              },
              {
                "type": "SYMBOL",
                "name": "function_call"
              },
              {
                "type": "SYMBOL",
                "name": "pseudo_variable"
              },
              {
                "type": "SYMBOL",
                "name": "variable_content"
              }
            ]
          }
        }
      ]
    },
    "variable_content": {
      "type": "CHOICE",
      "members": [
        {
          "type": "SEQ",
          "members": [
            {
              "type": "SYMBOL",
              "name": "index"
            },
            {
              "type": "CHOICE",
              "members": [
                {
                  "type": "SYMBOL",
                  "name": "transformation"
                },
                {
                  "type": "BLANK"
                }
              ]
            }
          ]
        },
        {
          "type": "SEQ",
          "members": [
            {
              "type": "SYMBOL",
              "name": "transformation"
            },
            {
              "type": "CHOICE",
              "members": [
                {
                  "type": "SYMBOL",
                  "name": "index"
                },
                {
                  "type": "BLANK"
                }
              ]
            }
          ]
        }
      ]
    },
    "index": {
      "type": "SEQ",
      "members": [
        {
          "type": "STRING",
          "value": "["
        },
        {
          "type": "PATTERN",
          "value": "[^\\]]+"
        },
        {
          "type": "STRING",
          "value": "]"
        }
      ]
    },
    "transformation": {
      "type": "SEQ",
      "members": [
        {
          "type": "STRING",
          "value": "{"
        },
        {
          "type": "FIELD",
          "name": "transformation_type",
          "content": {
            "type": "CHOICE",
            "members": [
              {
                "type": "STRING",
                "value": "s"
              },
              {
                "type": "STRING",
                "value": "uri"
              },
              {
                "type": "STRING",
                "value": "param"
              },
              {
                "type": "STRING",
                "value": "nameaddr"
              },
              {
                "type": "STRING",
                "value": "tobody"
              },
              {
                "type": "STRING",
                "value": "re"
              },
              {
                "type": "STRING",
                "value": "line"
              },
              {
                "type": "STRING",
                "value": "sql"
              },
              {
                "type": "STRING",
                "value": "msrpuri"
              },
              {
                "type": "STRING",
                "value": "json"
              },
              {
                "type": "STRING",
                "value": "url"
              },
              {
                "type": "STRING",
                "value": "sock"
              },
              {
                "type": "STRING",
                "value": "urialias"
              },
              {
                "type": "STRING",
                "value": "val"
              }
            ]
          }
        },
        {
          "type": "STRING",
          "value": "}"
        }
      ]
    },
    "boolean_constant": {
      "type": "TOKEN",
      "content": {
        "type": "CHOICE",
        "members": [
          {
            "type": "STRING",
            "value": "true"
          },
          {
            "type": "STRING",
            "value": "false"
          }
        ]
      }
    },
    "_expression": {
      "type": "CHOICE",
      "members": [
        {
          "type": "SYMBOL",
          "name": "function_call"
        },
        {
          "type": "SYMBOL",
          "name": "unary_expression"
        },
        {
          "type": "SYMBOL",
          "name": "binary_expression"
        }
      ]
    },
    "unary_expression": {
      "type": "CHOICE",
      "members": [
        {
          "type": "PREC",
          "value": 14,
          "content": {
            "type": "SEQ",
            "members": [
              {
                "type": "STRING",
                "value": "!"
              },
              {
                "type": "SYMBOL",
                "name": "_expression"
              }
            ]
          }
        }
      ]
    },
    "_logical_or_expression": {
      "type": "PREC_LEFT",
      "value": 1,
      "content": {
        "type": "SEQ",
        "members": [
          {
            "type": "CHOICE",
            "members": [
              {
                "type": "SYMBOL",
                "name": "local_variable"
              },
              {
                "type": "SYMBOL",
                "name": "pseudo_variable"
              },
              {
                "type": "SYMBOL",
                "name": "variable_content"
              }
            ]
          },
          {
            "type": "CHOICE",
            "members": [
              {
                "type": "TOKEN",
                "content": {
                  "type": "STRING",
                  "value": "||"
                }
              },
              {
                "type": "TOKEN",
                "content": {
                  "type": "STRING",
                  "value": "or"
                }
              }
            ]
          },
          {
            "type": "SYMBOL",
            "name": "_expression"
          }
        ]
      }
    },
    "_logical_and_expression": {
      "type": "PREC_LEFT",
      "value": 2,
      "content": {
        "type": "SEQ",
        "members": [
          {
            "type": "SYMBOL",
            "name": "_expression"
          },
          {
            "type": "CHOICE",
            "members": [
              {
                "type": "STRING",
                "value": "&&"
              },
              {
                "type": "STRING",
                "value": "and"
              }
            ]
          },
          {
            "type": "SYMBOL",
            "name": "_expression"
          }
        ]
      }
    },
    "_equality_expression": {
      "type": "PREC_LEFT",
      "value": 6,
      "content": {
        "type": "SEQ",
        "members": [
          {
            "type": "SYMBOL",
            "name": "_expression"
          },
          {
            "type": "STRING",
            "value": "=="
          },
          {
            "type": "SYMBOL",
            "name": "_expression"
          }
        ]
      }
    },
    "_relational_expression": {
      "type": "PREC_LEFT",
      "value": 7,
      "content": {
        "type": "SEQ",
        "members": [
          {
            "type": "SYMBOL",
            "name": "_expression"
          },
          {
            "type": "CHOICE",
            "members": [
              {
                "type": "STRING",
                "value": ">"
              },
              {
                "type": "STRING",
                "value": "<"
              },
              {
                "type": "STRING",
                "value": ">="
              },
              {
                "type": "STRING",
                "value": "<="
              }
            ]
          },
          {
            "type": "SYMBOL",
            "name": "_expression"
          }
        ]
      }
    },
    "binary_expression": {
      "type": "CHOICE",
      "members": [
        {
          "type": "SYMBOL",
          "name": "_logical_or_expression"
        },
        {
          "type": "SYMBOL",
          "name": "_logical_and_expression"
        },
        {
          "type": "SYMBOL",
          "name": "_equality_expression"
        },
        {
          "type": "SYMBOL",
          "name": "_relational_expression"
        }
      ]
    },
    "identifier": {
      "type": "PATTERN",
      "value": "[a-zA-Z_][a-zA-Z0-9_]*"
    },
    "hex_number": {
      "type": "PATTERN",
      "value": "0x[0-9a-fA-F]+"
    },
    "oct_number": {
      "type": "PATTERN",
      "value": "0[0-7]+"
    },
    "dec_number": {
      "type": "PATTERN",
      "value": "[0-9]+"
    },
    "bin_number": {
      "type": "PATTERN",
      "value": "[0-1]+b"
    },
    "pseudo_variable": {
      "type": "SEQ",
      "members": [
        {
          "type": "STRING",
          "value": "$"
        },
        {
          "type": "CHOICE",
          "members": [
            {
              "type": "SEQ",
              "members": [
                {
                  "type": "STRING",
                  "value": "{"
                },
                {
                  "type": "FIELD",
                  "name": "pvar",
                  "content": {
                    "type": "SYMBOL",
                    "name": "pvar_type"
                  }
                },
                {
                  "type": "STRING",
                  "value": "}"
                }
              ]
            },
            {
              "type": "SEQ",
              "members": [
                {
                  "type": "FIELD",
                  "name": "pvar",
                  "content": {
                    "type": "SYMBOL",
                    "name": "pvar_type"
                  }
                }
              ]
            }
          ]
        }
      ]
    },
    "pvar_type": {
      "type": "CHOICE",
      "members": [
        {
          "type": "STRING",
          "value": "avp"
        },
        {
          "type": "STRING",
          "value": "hdr"
        },
        {
          "type": "STRING",
          "value": "ru"
        },
        {
          "type": "STRING",
          "value": "tu"
        },
        {
          "type": "STRING",
          "value": "ci"
        },
        {
          "type": "STRING",
          "value": "du"
        },
        {
          "type": "STRING",
          "value": "fu"
        },
        {
          "type": "STRING",
          "value": "ru"
        },
        {
          "type": "STRING",
          "value": "route"
        },
        {
          "type": "STRING",
          "value": "rU"
        },
        {
          "type": "STRING",
          "value": "null"
        },
        {
          "type": "STRING",
          "value": "branch"
        },
        {
          "type": "STRING",
          "value": "rr"
        },
        {
          "type": "STRING",
          "value": "addr"
        },
        {
          "type": "STRING",
          "value": "body"
        },
        {
          "type": "STRING",
          "value": "ct"
        },
        {
          "type": "STRING",
          "value": "diversion"
        }
      ]
    },
    "avp_variable": {
      "type": "SEQ",
      "members": [
        {
          "type": "STRING",
          "value": "$"
        },
        {
          "type": "TOKEN",
          "content": {
            "type": "STRING",
            "value": "avp"
          }
        },
        {
          "type": "STRING",
          "value": "("
        },
        {
          "type": "FIELD",
          "name": "variable_name",
          "content": {
            "type": "SYMBOL",
            "name": "identifier"
          }
        },
        {
          "type": "STRING",
          "value": ")"
        },
        {
          "type": "STRING",
          "value": "="
        },
        {
          "type": "FIELD",
          "name": "value",
          "content": {
            "type": "CHOICE",
            "members": [
              {
                "type": "SYMBOL",
                "name": "string"
              },
              {
                "type": "SYMBOL",
                "name": "number"
              },
              {
                "type": "SYMBOL",
                "name": "boolean_constant"
              },
              {
                "type": "SYMBOL",
                "name": "identifier"
              },
              {
                "type": "SYMBOL",
                "name": "function_call"
              },
              {
                "type": "SYMBOL",
                "name": "pseudo_variable"
              },
              {
                "type": "SYMBOL",
                "name": "variable_content"
              }
            ]
          }
        }
      ]
    },
    "xavp_variable": {
      "type": "SEQ",
      "members": [
        {
          "type": "STRING",
          "value": "$"
        },
        {
          "type": "TOKEN",
          "content": {
            "type": "STRING",
            "value": "xavp"
          }
        },
        {
          "type": "STRING",
          "value": "("
        },
        {
          "type": "FIELD",
          "name": "variable_name",
          "content": {
            "type": "SYMBOL",
            "name": "identifier"
          }
        },
        {
          "type": "STRING",
          "value": ")"
        },
        {
          "type": "STRING",
          "value": "="
        },
        {
          "type": "FIELD",
          "name": "value",
          "content": {
            "type": "CHOICE",
            "members": [
              {
                "type": "SYMBOL",
                "name": "string"
              },
              {
                "type": "SYMBOL",
                "name": "number"
              },
              {
                "type": "SYMBOL",
                "name": "boolean_constant"
              },
              {
                "type": "SYMBOL",
                "name": "identifier"
              },
              {
                "type": "SYMBOL",
                "name": "function_call"
              },
              {
                "type": "SYMBOL",
                "name": "pseudo_variable"
              },
              {
                "type": "SYMBOL",
                "name": "variable_content"
              }
            ]
          }
        }
      ]
    },
    "modparam": {
      "type": "SEQ",
      "members": [
        {
          "type": "TOKEN",
          "content": {
            "type": "STRING",
            "value": "modparam"
          }
        },
        {
          "type": "STRING",
          "value": "("
        },
        {
          "type": "FIELD",
          "name": "module_name",
          "content": {
            "type": "SYMBOL",
            "name": "string"
          }
        },
        {
          "type": "STRING",
          "value": ","
        },
        {
          "type": "FIELD",
          "name": "parameter_name",
          "content": {
            "type": "SYMBOL",
            "name": "string"
          }
        },
        {
          "type": "STRING",
          "value": ","
        },
        {
          "type": "FIELD",
          "name": "value",
          "content": {
            "type": "CHOICE",
            "members": [
              {
                "type": "SYMBOL",
                "name": "string"
              },
              {
                "type": "SYMBOL",
                "name": "number"
              },
              {
                "type": "SYMBOL",
                "name": "boolean_constant"
              },
              {
                "type": "SYMBOL",
                "name": "identifier"
              },
              {
                "type": "SYMBOL",
                "name": "function_call"
              },
              {
                "type": "SYMBOL",
                "name": "variable"
              },
              {
                "type": "SYMBOL",
                "name": "variable_content"
              }
            ]
          }
        },
        {
          "type": "STRING",
          "value": ")"
        }
      ]
    },
    "modparamx": {
      "type": "SEQ",
      "members": [
        {
          "type": "TOKEN",
          "content": {
            "type": "STRING",
            "value": "modparamx"
          }
        },
        {
          "type": "SYMBOL",
          "name": "_LPAREN"
        },
        {
          "type": "FIELD",
          "name": "module_name",
          "content": {
            "type": "SYMBOL",
            "name": "string"
          }
        },
        {
          "type": "SYMBOL",
          "name": "_COMMA"
        },
        {
          "type": "FIELD",
          "name": "parameter_name",
          "content": {
            "type": "SYMBOL",
            "name": "string"
          }
        },
        {
          "type": "SYMBOL",
          "name": "_COMMA"
        },
        {
          "type": "FIELD",
          "name": "value",
          "content": {
            "type": "CHOICE",
            "members": [
              {
                "type": "SYMBOL",
                "name": "string"
              },
              {
                "type": "SYMBOL",
                "name": "number"
              },
              {
                "type": "SYMBOL",
                "name": "boolean_constant"
              },
              {
                "type": "SYMBOL",
                "name": "identifier"
              },
              {
                "type": "SYMBOL",
                "name": "function_call"
              },
              {
                "type": "SYMBOL",
                "name": "variable"
              },
              {
                "type": "SYMBOL",
                "name": "variable_content"
              }
            ]
          }
        },
        {
          "type": "SYMBOL",
          "name": "_RPAREN"
        }
      ]
    },
    "function_call": {
      "type": "SEQ",
      "members": [
        {
          "type": "FIELD",
          "name": "function_name",
          "content": {
            "type": "SYMBOL",
            "name": "identifier"
          }
        },
        {
          "type": "SYMBOL",
          "name": "_LPAREN"
        },
        {
          "type": "CHOICE",
          "members": [
            {
              "type": "SEQ",
              "members": [
                {
                  "type": "CHOICE",
                  "members": [
                    {
                      "type": "FIELD",
                      "name": "argument",
                      "content": {
                        "type": "SYMBOL",
                        "name": "identifier"
                      }
                    },
                    {
                      "type": "FIELD",
                      "name": "argument",
                      "content": {
                        "type": "SYMBOL",
                        "name": "sip_keywords"
                      }
                    },
                    {
                      "type": "FIELD",
                      "name": "argument",
                      "content": {
                        "type": "SYMBOL",
                        "name": "string"
                      }
                    },
                    {
                      "type": "FIELD",
                      "name": "argument",
                      "content": {
                        "type": "SYMBOL",
                        "name": "number"
                      }
                    }
                  ]
                },
                {
                  "type": "REPEAT",
                  "content": {
                    "type": "SEQ",
                    "members": [
                      {
                        "type": "SYMBOL",
                        "name": "_COMMA"
                      },
                      {
                        "type": "CHOICE",
                        "members": [
                          {
                            "type": "FIELD",
                            "name": "argument",
                            "content": {
                              "type": "SYMBOL",
                              "name": "identifier"
                            }
                          },
                          {
                            "type": "FIELD",
                            "name": "argument",
                            "content": {
                              "type": "SYMBOL",
                              "name": "sip_keywords"
                            }
                          },
                          {
                            "type": "FIELD",
                            "name": "argument",
                            "content": {
                              "type": "SYMBOL",
                              "name": "string"
                            }
                          },
                          {
                            "type": "FIELD",
                            "name": "argument",
                            "content": {
                              "type": "SYMBOL",
                              "name": "number"
                            }
                          }
                        ]
                      }
                    ]
                  }
                }
              ]
            },
            {
              "type": "BLANK"
            }
          ]
        },
        {
          "type": "SYMBOL",
          "name": "_RPAREN"
        }
      ]
    },
    "_block": {
      "type": "SEQ",
      "members": [
        {
          "type": "SYMBOL",
          "name": "_LBRACE"
        },
        {
          "type": "REPEAT",
          "content": {
            "type": "SYMBOL",
            "name": "_statement"
          }
        },
        {
          "type": "SYMBOL",
          "name": "_RBRACE"
        }
      ]
    },
    "parenthesized_expression": {
      "type": "SEQ",
      "members": [
        {
          "type": "SYMBOL",
          "name": "_LPAREN"
        },
        {
          "type": "FIELD",
          "name": "expression",
          "content": {
            "type": "SYMBOL",
            "name": "identifier"
          }
        },
        {
          "type": "SYMBOL",
          "name": "_RPAREN"
        }
      ]
    },
    "route_call": {
      "type": "SEQ",
      "members": [
        {
          "type": "TOKEN",
          "content": {
            "type": "STRING",
            "value": "route"
          }
        },
        {
          "type": "SYMBOL",
          "name": "_LPAREN"
        },
        {
          "type": "FIELD",
          "name": "route_name",
          "content": {
            "type": "CHOICE",
            "members": [
              {
                "type": "SYMBOL",
                "name": "identifier"
              },
              {
                "type": "SYMBOL",
                "name": "string"
              },
              {
                "type": "SYMBOL",
                "name": "number"
              }
            ]
          }
        },
        {
          "type": "SYMBOL",
          "name": "_RPAREN"
        }
      ]
    },
    "sip_keywords": {
      "type": "TOKEN",
      "content": {
        "type": "CHOICE",
        "members": [
          {
            "type": "STRING",
            "value": "\"INVITE\""
          },
          {
            "type": "STRING",
            "value": "\"ACK\""
          },
          {
            "type": "STRING",
            "value": "\"BYE\""
          },
          {
            "type": "STRING",
            "value": "\"CANCEL\""
          },
          {
            "type": "STRING",
            "value": "\"PRACK\""
          },
          {
            "type": "STRING",
            "value": "\"UPDATE\""
          },
          {
            "type": "STRING",
            "value": "\"REGISTER\""
          },
          {
            "type": "STRING",
            "value": "\"MESSAGE\""
          },
          {
            "type": "STRING",
            "value": "\"INFO\""
          },
          {
            "type": "STRING",
            "value": "\"OPTIONS\""
          },
          {
            "type": "STRING",
            "value": "\"SUBSCRIBE\""
          },
          {
            "type": "STRING",
            "value": "\"NOTIFY\""
          },
          {
            "type": "STRING",
            "value": "\"PUBLISH\""
          },
          {
            "type": "STRING",
            "value": "\"REFER\""
          },
          {
            "type": "STRING",
            "value": "\"KDMQ\""
          },
          {
            "type": "STRING",
            "value": "\"GET\""
          },
          {
            "type": "STRING",
            "value": "\"POST\""
          },
          {
            "type": "STRING",
            "value": "\"PUT\""
          },
          {
            "type": "STRING",
            "value": "\"DELETE\""
          },
          {
            "type": "STRING",
            "value": "\"SIP\""
          },
          {
            "type": "STRING",
            "value": "\"From\""
          },
          {
            "type": "STRING",
            "value": "\"To\""
          },
          {
            "type": "STRING",
            "value": "\"Call-ID\""
          },
          {
            "type": "STRING",
            "value": "\"CSeq\""
          },
          {
            "type": "STRING",
            "value": "\"Route\""
          },
          {
            "type": "STRING",
            "value": "\"Record-Route\""
          },
          {
            "type": "STRING",
            "value": "\"Authorization\""
          },
          {
            "type": "STRING",
            "value": "\"Proxy-Authorization\""
          },
          {
            "type": "STRING",
            "value": "\"Contact\""
          },
          {
            "type": "STRING",
            "value": "\"Expires\""
          },
          {
            "type": "STRING",
            "value": "\"Content-Type\""
          },
          {
            "type": "STRING",
            "value": "\"Content-Length\""
          },
          {
            "type": "STRING",
            "value": "\"Via\""
          },
          {
            "type": "STRING",
            "value": "\"User-Agent\""
          },
          {
            "type": "STRING",
            "value": "\"P-Asserted-Identity\""
          }
        ]
      }
    }
  },
  "extras": [
    {
      "type": "PATTERN",
      "value": "\\s"
    }
  ],
  "conflicts": [],
  "precedences": [],
  "externals": [],
  "inline": [],
  "supertypes": []
}
